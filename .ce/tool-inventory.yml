# MCP Tool Inventory & Configuration Optimization
# Generated: 2025-10-16
# Purpose: Query tree simplification + context reduction (30-50% target)

optimization_rationale: |
  Reduce context overhead through:
  1. Granular allow list (31 essential tools)
  2. Explicit deny list (105 unused tools - 94 MCP + 11 bash)
  3. All permissions at tool function level (no wildcards)
  4. All MCP servers enabled, only specific tools denied

audit_date: "2025-10-16"
audit_method: "grep -r 'mcp__' ce/*.py + manual settings.local.json analysis"

# MCP TOOL USAGE ANALYSIS

mcp_servers:
  serena:
    total_available: 30
    used_in_workflow: 6
    usage_breakdown:
      find_symbol: 4           # KEEP - Essential code navigation
      search_for_pattern: 3    # KEEP - Essential search
      get_symbols_overview: 1  # KEEP - File structure
      find_referencing_symbols: 1  # KEEP - Dependency tracking
      write_memory: 1          # KEEP - Memory updates
      create_text_file: 1      # KEEP - File creation
    unused_in_workflow: 24     # → DENY (explicit list)
    unused_tools:
      - delete_memory
      - rename_symbol
      - switch_modes
      - prepare_for_new_conversation
      - list_memories
      - read_memory
      - check_onboarding_performed
      - onboarding
      - think_about_collected_information
      - think_about_task_adherence
      - think_about_whether_you_are_done
      - insert_before_symbol
      - insert_after_symbol
      - replace_symbol_body
      - get_current_config
      - activate_project  # Already in allow list but unused
      - list_dir  # Already in allow list but unused
      - read_file  # Already in allow list but unused

  filesystem:
    total_available: 20
    used_in_workflow: 0  # No actual usage found in ce modules
    recommended_essential: 8
    essential_tools:
      - read_text_file
      - list_directory
      - write_file
      - edit_file
      - search_files
      - directory_tree
      - get_file_info
      - list_allowed_directories
    unused_in_workflow: 12
    unused_tools:
      - read_file  # Deprecated in favor of read_text_file
      - read_media_file
      - read_multiple_files
      - create_directory
      - move_file
      - list_directory_with_sizes

  git:
    total_available: 15
    used_in_workflow: 3
    usage_breakdown:
      git_status: 1   # KEEP - Status checks
      git_log: 1      # KEEP - History
      git_diff: 1     # KEEP - Changes
    recommended_additions: 2
    additional_tools:
      - git_add    # Common workflow
      - git_commit # Common workflow
    unused_in_workflow: 10
    unused_tools:
      - git_branch
      - git_checkout
      - git_show
      - git_create_branch
      - git_reset
      - git_diff_staged
      - git_diff_unstaged

  context7:
    total_available: 2
    recommended: 2
    tools:
      - resolve-library-id
      - get-library-docs

  sequential_thinking:
    total_available: 1
    recommended: 1
    tools:
      - sequentialthinking

  linear_server:
    total_available: 18
    recommended: 5
    essential_tools:
      - create_issue
      - get_issue
      - list_issues
      - update_issue
      - list_projects
    unused_tools:
      - list_comments
      - create_comment
      - list_cycles
      - get_document
      - list_documents
      - create_issue_label
      - list_issue_labels
      - list_issue_statuses
      - get_issue_status
      - create_project
      - update_project
      - list_project_labels
      - list_teams
      - get_team
      - list_users
      - get_user
      - search_documentation

  github:
    total_available: 26
    used_in_workflow: 0
    recommended: 0  # All unused
    unused_tools:
      - create_or_update_file
      - search_repositories
      - create_repository
      - get_file_contents
      - push_files
      - create_issue
      - create_pull_request
      - fork_repository
      - create_branch
      - list_commits
      - list_issues
      - update_issue
      - add_issue_comment
      - search_code
      - search_issues
      - search_users
      - get_issue
      - get_pull_request
      - list_pull_requests
      - create_pull_request_review
      - merge_pull_request
      - get_pull_request_files
      - get_pull_request_status
      - update_pull_request_branch
      - get_pull_request_comments
      - get_pull_request_reviews

  playwright:
    total_available: 31
    used_in_workflow: 0
    recommended: 0  # All unused
    unused_tools:
      - start_codegen_session
      - end_codegen_session
      - get_codegen_session
      - clear_codegen_session
      - playwright_navigate
      - playwright_screenshot
      - playwright_click
      - playwright_iframe_click
      - playwright_iframe_fill
      - playwright_fill
      - playwright_select
      - playwright_hover
      - playwright_upload_file
      - playwright_evaluate
      - playwright_console_logs
      - playwright_close
      - playwright_get
      - playwright_post
      - playwright_put
      - playwright_patch
      - playwright_delete
      - playwright_expect_response
      - playwright_assert_response
      - playwright_custom_user_agent
      - playwright_get_visible_text
      - playwright_get_visible_html
      - playwright_go_back
      - playwright_go_forward
      - playwright_drag
      - playwright_press_key
      - playwright_save_as_pdf
      - playwright_click_and_switch_tab

  perplexity:
    total_available: 1
    used_in_workflow: 0
    recommended: 0
    unused_tools:
      - perplexity_ask

  repomix:
    total_available: 6
    used_in_workflow: 0
    recommended: 0
    unused_tools:
      - pack_codebase
      - pack_remote_repository
      - read_repomix_output
      - grep_repomix_output
      - file_system_read_file
      - file_system_read_directory

  ide:
    total_available: 2
    used_in_workflow: 0
    recommended: 0
    unused_tools:
      - getDiagnostics
      - executeCode

# BASH COMMAND USAGE ANALYSIS

bash_commands:
  total_usages_in_code: 46  # grep count for run_cmd/subprocess/shell=True
  current_allow_list: 18    # From settings.local.json

  essential_external_tools:
    git:
      count: 3
      commands:
        - "Bash(git:*)"  # Version control operations
        - "Bash(git add:*)"
        - "Bash(git commit:*)"
    uv:
      count: 3
      commands:
        - "Bash(uv run:*)"
        - "Bash(uv run pytest:*)"
        - "Bash(uv add:*)"

  replaceable_with_python: 11  # → DENY
  replaceable_commands:
    - "Bash(cat:*)"      # Replace with Path.read_text()
    - "Bash(head:*)"     # Replace with shell_utils.head()
    - "Bash(tail:*)"     # Not in use but listed
    - "Bash(find:*)"     # Replace with shell_utils.find_files()
    - "Bash(grep:*)"     # Not in use but should be denied
    - "Bash(wc:*)"       # Not in use but should be denied
    - "Bash(awk:*)"      # Not in use but should be denied
    - "Bash(sed:*)"      # Not in use but should be denied
    - "Bash(echo:*)"     # Not in use but should be denied
    - "Bash(python:*)"   # Use ce run_py instead
    - "Bash(python3:*)"  # Use ce run_py instead

  shell_script_fragments: 9  # Currently allowed but should be consolidated
  fragments_to_remove:
    - "Bash(for file in PRPs/feature-requests/*.md PRPs/executed/*.md)"
    - "Bash(do [ -f \"$file\" ])"
    - "Bash(echo \"=== $file ===\")"
    - "Bash(done)"
    - "Bash(do if [ -f \"$file\" ])"
    - "Bash(then echo \"=== $file ===\")"
    - "Bash(fi)"
    - "Bash(./tmp/extract_prp_metadata.sh:*)"  # One-off script
    - "Bash(chmod:*)"  # Use Path.chmod()

  keep_special_cases: 5
  special_cases:
    - "Bash(uvx:*)"  # UV executor
    - "Bash(env:*)"  # Environment variables
    - "Bash(git diff-tree:*)"  # Special git operation
    - "Bash(brew install:*)"  # Package management
    - "Bash(rm -rf ~/.mcp-auth)"  # MCP auth reset

# OPTIMIZATION RECOMMENDATIONS

recommendations:
  allow_list_size: 30  # MCP tools (explicit, no wildcards)
  deny_list_size: 126  # 115 MCP tools + 11 bash commands (all explicit)

  deny_breakdown:
    serena: 18          # Unused symbolic tools
    filesystem: 6       # Deprecated/unused file ops
    git: 7              # Advanced git operations
    github: 26          # All GitHub tools
    playwright: 32      # All Playwright tools
    perplexity: 1       # AI query tool
    repomix: 6          # All Repomix tools
    ide: 2              # All IDE tools
    linear_server: 17   # Advanced Linear operations
    bash: 11            # Replaceable text processing

  allow_list_composition:
    serena: 6           # Core symbolic operations
    filesystem: 8       # Essential file operations
    git: 5              # Basic git workflow
    context7: 2         # Documentation lookup
    sequential_thinking: 1  # Complex reasoning
    linear_server: 5    # Core issue management
    bash_external: 3    # Git, UV tools only

  context_reduction: "60-70%"  # Estimated based on tool count reduction
  query_tree_reduction: "60-70%"  # Fewer tools to evaluate per decision

  performance_gains:
    python_vs_bash: "10-50x faster"  # No subprocess overhead
    bash_reduction: "From 46 usages to ~6 (essential only)"

# VALIDATION METRICS

metrics:
  before:
    total_permissions: 45
    wildcard_patterns: 0   # Already explicit
    deny_list_size: 0
    bash_usages: 46
    context_size: "100% (baseline)"

  after:
    total_allow_list: 30
    total_deny_list: 126
    wildcard_patterns: 0   # Maintain explicit
    bash_usages_target: 6  # Essential only
    context_size_target: "30-50% reduction"
    query_tree_reduction: "60-70%"

# IMPLEMENTATION STATUS

implementation_status:
  audit_complete: true
  inventory_created: true
  allow_list_designed: true
  deny_list_designed: true
  shell_utils_pending: true
  refactoring_pending: true
  documentation_pending: true
