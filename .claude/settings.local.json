{
  "permissions": {
    "allow": [
      "Bash(uv run pytest:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(//Users/bprzybysz/nc-src/**)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(uv run:*)",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__search_for_pattern",
      "mcp__serena__list_dir",
      "mcp__serena__activate_project",
      "mcp__serena__read_file",
      "mcp__git__git_status",
      "mcp__git__git_log",
      "mcp__git__git_diff",
      "SlashCommand(/generate-prp:*)",
      "SlashCommand(/peer-review PRPs/feature-requests/PRP-11-pipeline-testing-framework.md)",
      "SlashCommand(/peer-review:*)",
      "Read(//Users/bprzybysz/.claude/**)",
      "Bash(cat:*)",
      "Bash(uvx:*)",
      "Bash(env:*)",
      "Read(//Users/bprzybysz/Library/Application Support/Claude/**)",
      "Bash(uv add:*)",
      "Bash(git diff-tree:*)",
      "Bash(brew install:*)",
      "Bash(rm -rf ~/.mcp-auth)",
      "Bash(for file in PRPs/feature-requests/*.md PRPs/executed/*.md)",
      "Bash(do [ -f \"$file\" ])",
      "Bash(echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(chmod:*)",
      "Bash(./tmp/extract_prp_metadata.sh:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"=== $file ===\")",
      "Bash(fi)",
      "Bash(python:*)",
      "Bash(python3:*)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "SessionStart": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "cd tools && uv run ce context health --json | jq -r '(.drift_score | . * 100 | round / 100) as $rounded | if .drift_score > 30 then \"⚠️ HIGH DRIFT: \" + ($rounded | tostring) + \"% - Run: ce context sync\" elif .drift_score > 10 then \"⚠️ Moderate drift: \" + ($rounded | tostring) + \"%\" else \"✅ Context healthy: \" + ($rounded | tostring) + \"%\" end'",
            "timeout": 5
          }
        ]
      }
    ]
  }
}
